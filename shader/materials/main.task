#version 450

#extension GL_ARB_separate_shader_objects : enable
#extension GL_GOOGLE_include_directive : enable
#extension GL_NV_mesh_shader : require
#extension GL_KHR_shader_subgroup_vote: enable

layout(local_size_x = 32) in;

#define TASK
#include "materials_common.glsl"

layout(std430, binding = L_MeshDesc) readonly buffer Inst { vec4  bounds  []; };

void main() {
  const uint laneID = gl_LocalInvocationID.x;
  const vec4 sphere = bounds[gl_WorkGroupID.x];

  bool invisible = false;
  for(int i=0; i<6; ++i) {
    if(dot(vec4(sphere.xyz,1.0), scene.frustrum[laneID]) <= -sphere.w)
      invisible = true;
    }

  if(invisible) {
    gl_TaskCountNV = 0;
    return;
    }

  gl_TaskCountNV = 1;
  }
