configuration:
  - release

environment:
  matrix:
    - APPVEYOR_BUILD_WORKER_IMAGE: Visual Studio 2019
      GENERATOR: "Visual Studio 16 2019"
      VCVARSALL: "C:/Program Files (x86)/Microsoft Visual Studio/2019/Community/VC/Auxiliary/Build/vcvarsall.bat"
      PLATFORM:  x64

    - APPVEYOR_BUILD_WORKER_IMAGE: Visual Studio 2015  # used as mingw
      GENERATOR: "Ninja"
      CC:        C:/mingw-w64/x86_64-8.1.0-posix-seh-rt_v6-rev0/mingw64/bin/gcc.exe
      CXX:       C:/mingw-w64/x86_64-8.1.0-posix-seh-rt_v6-rev0/mingw64/bin/g++.exe

    - APPVEYOR_BUILD_WORKER_IMAGE: Ubuntu2004
      GENERATOR: ""

install:
- git submodule -q update --init --recursive
# Vulkan SDK and thirdparty
# https://vulkan.lunarg.com/content/view/latest-sdk-version-api
- cmd: curl -L --silent --show-error --output VulkanSDK.exe https://sdk.lunarg.com/sdk/download/1.2.170.0/windows/vulkan_sdk.exe
- cmd: VulkanSDK.exe /S
- cmd: set VK_SDK_PATH=C:/VulkanSDK/1.2.170.0

- sh:  sudo apt-get update
- sh:  sudo apt-get --yes install libvulkan-dev libasound2-dev libx11-dev libxcursor-dev
# https://github.com/appveyor/ci/issues/3573
- sh:  sudo apt-get install -y libclang1-9
- sh:  curl -L --silent --show-error --output VulkanSDK.tar.gz https://sdk.lunarg.com/sdk/download/1.2.170.0/linux/vulkan_sdk.tar.gz
- sh:  mkdir VulkanSDK
- sh:  tar -xzf VulkanSDK.tar.gz -C ./VulkanSDK
- sh:  export VK_SDK_PATH=$APPVEYOR_BUILD_FOLDER/VulkanSDK/1.2.170.0/x86_64

# GLSL compiller
- mkdir glslang
- cd glslang
- cmd: curl -fsSL -o glslang-master-windows-x64-Release.zip https://github.com/KhronosGroup/glslang/releases/download/master-tot/glslang-master-windows-x64-Release.zip
- sh:  curl -fsSL -o glslang-master-linux-Release.zip https://github.com/KhronosGroup/glslang/releases/download/master-tot/glslang-master-linux-Release.zip
- cmd: 7z x glslang-master-windows-x64-Release.zip
- sh:  7z x glslang-master-linux-Release.zip
- cd ..
- cmd: "SET PATH=%APPVEYOR_BUILD_FOLDER%\\glslang\\bin;%PATH%"
- sh: export PATH="$PATH:$APPVEYOR_BUILD_FOLDER/glslang/bin"

before_build:
  # Prepare the out-of-source build directory.
  - mkdir build
  - cmd: PATH=C:/mingw-w64/x86_64-8.1.0-posix-seh-rt_v6-rev0/mingw64/bin;C:/Qt/Tools/QtCreator/bin;%Path%
  - cmd: echo gothic-win64-v%appveyor_build_version% >> VERSION
  - sh:  echo gothic-linux-v%appveyor_build_version% >> VERSION
  - echo '#pragma once'                                                          > game/build.h
  - echo 'static const char* appBuild = "OpenGothic v%appveyor_build_version%"' >> game/build.h

build_script:
  - cmake --version
  - cmd: if NOT "%VCVARSALL%" == "" call "%VCVARSALL%" %PLATFORM%
  - cmd: cmake -H. -Bbuild -G "%GENERATOR%" -DCMAKE_BUILD_TYPE:STRING=RelWithDebInfo -DCMAKE_SH=CMAKE_SH-NOTFOUND
  - sh:  cmake -H. -Bbuild                  -DCMAKE_BUILD_TYPE:STRING=RelWithDebInfo
  - cmake --build ./build

after_build:
  # generate version string
  - cd build
  - cd opengothic
  - cmd: copy /b/y "C:\mingw-w64\x86_64-8.1.0-posix-seh-rt_v6-rev0\mingw64\bin\libgcc_s_seh-1.dll"   "libgcc_s_seh-1.dll"
  - cmd: copy /b/y "C:\mingw-w64\x86_64-8.1.0-posix-seh-rt_v6-rev0\mingw64\bin\libstdc++-6.dll"      "libstdc++-6.dll"
  - cmd: copy /b/y "C:\mingw-w64\x86_64-8.1.0-posix-seh-rt_v6-rev0\mingw64\bin\libwinpthread-1.dll"  "libwinpthread-1.dll"
  # zip the results
  - cmd: set name="opengothic_win.zip"
  - cmd: 7z a %name%    VERSION
  - cmd: 7z a %name% -r "*.exe"
  - cmd: 7z a %name% -r "*.dll"
  - cmd: 7z a %name% -r "*.bat"
  - sh:  export name="opengothic_linux.zip"
  - sh:  7z a $name     VERSION
  - sh:  7z a $name     "*"
  - sh:  7z a $name     "*"
  - sh:  7z a $name     "Gothic2Notr.sh"

artifacts:
  - path: build/opengothic/opengothic_win.zip
    name: archive

deploy:
  release: gothic-win64-v$(appveyor_build_version)
  description: 'no release description'
  provider: GitHub
  auth_token:
    secure: YLdtUMsAcc8FUr3kgwhQW7nkl5jDpLKbelvzWzzTWUfAiDd92Kd15rjlDJVEEFzo
  artifact: archive
  draft: true
  force_update: false
  prerelease: true
  tag: $(APPVEYOR_REPO_TAG_NAME)
  on:
    branch: $(APPVEYOR_REPO_TAG_NAME)
    APPVEYOR_BUILD_WORKER_IMAGE: Visual Studio 2015 # mingw is default for now
    appveyor_repo_tag: true       # deploy on tag push only
